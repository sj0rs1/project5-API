name: CI and Release ##

on:
  push:
    branches:
      - main

jobs:
  build-and-test:
    name: Build, Test and Lint
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: groenevingers_db
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping --silent" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v2

      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: vendor
          key: composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            composer-

      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.1

      - name: Copy .env file
        run: |
          cp .env.ci .env
        env:
          DB_CONNECTION: mysql
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_DATABASE: groenevingers_db
          DB_USERNAME: root
          DB_PASSWORD:

      - name: Run Composer
        run: |
          composer install --no-interaction
      
      - name: Run PHP_CodeSniffer
        run: |
          vendor/bin/phpcs --exclude=Generic.Files.LineLength --standard=PSR12 app/

      - name: Migrate database
        run: |
          php artisan migrate:fresh

      - name: Seed database
        run: |
          php artisan db:seed

      - name: Run tests
        run: |
          php artisan test

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Package Application
        run: |
          mkdir -p release
          zip -r release/app.zip *

      - name: Upload Release Artifact
        uses: actions/upload-artifact@v3
        with:
          name: app-release
          path: release/app.zip

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "release-${{ github.run_id }}"
          release_name: "Release ${{ github.run_id }}"
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release/app.zip
          asset_name: app.zip
          asset_content_type: application/zip
